@model E_Recarga.Models.ERecargaModels.Station
@using E_Recarga.Models

@{
    ViewBag.Title = "Detalhes da Estação";
}

<center>
    <br /><h1> @Html.DisplayFor(model => model.Company.Name): @Html.DisplayFor(model => model.ComercialName)</h1><br />
</center>

<div>
    <hr />
    <dl class="dl-horizontal" size="+1.5">
        <dt>
            @Html.DisplayNameFor(model => model.Company.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Company.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ComercialName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ComercialName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StreetName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StreetName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BuildingNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BuildingNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PostalCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PostalCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Parish)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Parish)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Region)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Region)
        </dd>
    </dl>

    <div class="text-right">
        @if (Request.IsAuthenticated && User.IsInRole(nameof(RoleEnum.CompanyManager)))
        {
            @Html.ActionLink("Editar", "Edit", new { id = Model.Id },null)
        }
    </div>
    <hr />
</div>


<br />
<div>
    <h3>Funcionários</h3>
    @if (Request.IsAuthenticated && User.IsInRole(nameof(RoleEnum.CompanyManager)))
    {
        <div class="text-right">
            @Html.ActionLink("Criar", "Create", "Employees")<br /><br />
        </div>
    }

    @if (Model.Employees.Count == 0)
    {
        <p>Não existem trabalhadores atribuídos à estação.</p>
    }
    else
    {
        @(Html
            .Grid(Model.Employees)
            .Build(columns =>
            {
                columns.Add(model => model.Name);
                columns.Add(model => model.Email).Titled("Email");
                columns.Add(model => model.PhoneNumber).Titled("Telefone");
                if(User.IsInRole(nameof(RoleEnum.CompanyManager)))
                {
                    columns.Add(model => @Html.Raw(Html.ActionLink("Detalhes", "Details","Employees",
                        new { id = model.Id },null).ToString()) + " | " + Html.ActionLink("Editar","Edit",
                        "Employees",new { id = model.Id },null).ToString() + " | " + Html.ActionLink("Eliminar",
                        "Delete","Employees", new { id = model.Id },null).ToString()).Titled("Ações").Encoded(false);
                }
            })
            .Empty("Não existem dados")
            .Filterable()
            .Sortable()
            .Pageable(pager =>
            {
                pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 5, "5" }, { 10, "10" }, { 20, "20" } };
                pager.ShowPageSizes = true;
                pager.PagesToDisplay = 3;
                pager.RowsPerPage = 5;
            })
        )

    }
</div>


<br />
<h3>Postos</h3>

@if (Request.IsAuthenticated && User.IsInRole(nameof(RoleEnum.CompanyManager)))
{
    <div class="text-right">
        @Html.ActionLink("Criar", "Create", "Pods", new { stationId = Model.Id }, null)<br /><br />
    </div>
}
@if (Model.Pods.Where(x => x.isActive == true).ToList().Count == 0)
{
    <p>Não existem postos ativos na estação @Model.ComercialName!.</p>
    <br /><br />
}
else
{
    <div id="stationPods">
        @(Html
        .Grid(Model.Pods.AsQueryable())
        .Build(columns =>
        {
            columns.Add(model => model.Id).Titled("Número");
            columns.Add(model => model.PodType.Name);
            columns.Add(model => model.Station.ComercialName).Titled("Estação");
            columns.Add(model => model.isActive);
            columns.Add(model => model.Appointments.ToList().FindAll(a => a.Start >= DateTime.Now &&
            a.Start <= DateTime.Now.AddHours(24)).Count).Titled("Marcações previstas (próximas 24h)");
            if (User.IsInRole(nameof(RoleEnum.CompanyManager)))
                columns.Add(model => @Html.Raw(Html.ActionLink("Detalhes", "Details","Pods", 
                    new { id = model.Id },null).ToString()) + " | " + Html.ActionLink("Editar", 
                    "Edit", "Pods", new { id = model.Id },null).ToString() + " | " + 
                    Html.ActionLink("Eliminar", "Delete", "Pods", new { id = model.Id },null)
                    .ToString()).Titled("Ações").Encoded(false);
            else //if (User.IsInRole(nameof(RoleEnum.Employee)))
                columns.Add(model => @Html.Raw(Html.ActionLink("Detalhes", "Details", "Pods", new { id = model.Id },null).ToString()) + " | " + Html.ActionLink("Editar", "Edit", "Stations", new { id = model.Id },null).ToString()).Titled("Ações").Encoded(false);
        })
        .Empty("Não existem dados")
        .Filterable()
        .Sortable()
        .Pageable(pager =>
        {
            pager.PageSizes = new Dictionary<Int32, String>
            { { 0, "All" }, { 5, "5" }, { 10, "10" }, { 20, "20" } };
            pager.ShowPageSizes = true;
            pager.PagesToDisplay = 3;
            pager.RowsPerPage = 5;
        })
    )
    </div><hr /><hr />
}