@model E_Recarga.ViewModels.CompanyViewModel
@using E_Recarga.Models

@{
    ViewBag.Title = "Details";
}


<center>
    <br /><h1>@Html.DisplayFor(model => model.Company.Name)</h1><br />
</center>


<div>
    <hr />
    <dl class="dl-horizontal" size="+1.5">
        <dt>
            @Html.DisplayNameFor(model => model.Company.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Company.PhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Company.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Company.Email)
        </dd>
    </dl>

    <div class="text-right">
        @if (Request.IsAuthenticated && User.IsInRole(nameof(RoleEnum.CompanyManager)))
        {
            @Html.ActionLink("Editar", "Edit")
        }
        else
        {
            @Html.ActionLink("Editar", "Edit", new { id = Model.Company.Id })
        }
    </div>
    <hr />
</div>

@if (Request.IsAuthenticated && User.IsInRole(nameof(RoleEnum.CompanyManager)))
{
    <br /><h3>Estações</h3>
    <div class="text-right">
        @Html.ActionLink("Criar", "Create", "Stations", new { companyId = Model.Company.Id }, null)<br /><br />
    </div>
    if (Model.Company.Stations.Count == 0)
    {
        <p>Não existem estações atribuídas à empresa.</p>
        <br /><br />
    }
    else
    {
        <div id="t_est">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Company.Stations[0].ComercialName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Company.Stations[0].Parish)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Company.Stations[0].Region)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Company.Stations)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ComercialName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Parish)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Region)
                        </td>
                        <td>
                            @Html.ActionLink("Editar", "Edit", "Stations", new { id = item.Id }, null) |
                            @Html.ActionLink("Detalhes", "Details", "Stations", new { id = item.Id }, null) |
                            @Html.ActionLink("Eliminar", "Delete", "Stations", new { id = item.Id }, null)
                        </td>
                    </tr>
                }

            </table>
        </div><hr /><br />
    }
}

<div>
    <h3>Funcionários</h3>
    @if (Request.IsAuthenticated && !User.IsInRole(nameof(RoleEnum.CompanyManager)))
    {
        <div class="text-right">
            @Html.ActionLink("Criar", "Create", "Employees", new { companyId = Model.Company.Id }, null)<br /><br />
        </div>
    }

    @if (Model.Company.Employees.Count == 0)
    {
        <p>Não existem trabalhadores atribuídos à empresa.</p>
    }
    else
    {
        <div id="t_func">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Company.Employees[0].Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Company.Employees[0].Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Company.Employees[0].PhoneNumber)
                    </th>
                    @if (Request.IsAuthenticated && User.IsInRole(nameof(RoleEnum.CompanyManager)))
                    {
                        <th>
                            @Html.DisplayNameFor(model => model.Company.Stations[0].ComercialName)
                        </th>
                    }
                    <th></th>
                </tr>

                @{ 
                    var data = User.IsInRole(nameof(RoleEnum.Administrator)) ? Model.Managers : Model.Company.Employees;
                }
                @foreach (var item in data)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>
                        @if (Request.IsAuthenticated && User.IsInRole(nameof(RoleEnum.CompanyManager)))
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.Station.ComercialName)
                            </td>
                        }
                        <td>
                            @Html.ActionLink("Editar", "Edit", "Employees", new { id = item.Id }, null) |
                            @Html.ActionLink("Detalhes", "Details", "Employees", new { id = item.Id }, null) |
                            @Html.ActionLink("Eliminar", "Delete", "Employees", new { id = item.Id }, null)
                        </td>
                    </tr>
                }

            </table>
        </div>
    }
    <hr /><br /><br />
    @if (Request.IsAuthenticated && User.IsInRole(nameof(RoleEnum.Administrator)))
    {
        @Html.ActionLink("Voltar", "Index")
    }
</div>

